import { Interview } from "@/types";


export const interviews: Interview[] = [
  {
    id: "1",
    role: "Software Engineer",
    level: "Mid-Level",
    questions: [
      "What is your favorite programming language and why?",
      "How do you handle debugging in your projects?",
      "Can you explain the concept of object-oriented programming?",
      "What is your experience with version control systems like Git?"
    ],
    techStacks: ["JavaScript", "React", "Node.js"],
    userId: "user123",
    type: "mock",
    finalized: false,
    createdAt: new Date().toISOString()
  },
  {
    id: "2",
    role: "Frontend Developer",
    level: "Junior",
    questions: [
      "How do you ensure your web app is accessible?",
      "Explain the difference between CSS Grid and Flexbox.",
      "What tools do you use for UI testing?",
      "How do you manage application state in React?"
    ],
    techStacks: ["HTML", "CSS", "React", "Redux"],
    userId: "user456",
    type: "mock",
    finalized: false,
    createdAt: new Date().toISOString()
  },
  {
    id: "3",
    role: "Backend Developer",
    level: "Senior",
    questions: [
      "What is your experience with database optimization?",
      "Can you explain microservices architecture?",
      "How do you ensure security in REST APIs?",
      "What are the pros and cons of using ORMs?"
    ],
    techStacks: ["Node.js", "PostgreSQL", "Express", "Docker"],
    userId: "user789",
    type: "mock",
    finalized: false,
    createdAt: new Date().toISOString()
  },
  {
    id: "4",
    role: "Full Stack Developer",
    level: "Mid-Level",
    questions: [
      "How do you manage backend and frontend integration?",
      "What is SSR and when would you use it?",
      "Describe your experience with CI/CD pipelines.",
      "How do you handle environment variables?"
    ],
    techStacks: ["Vue.js", "Node.js", "MongoDB"],
    userId: "user321",
    type: "mock",
    finalized: true,
    createdAt: new Date().toISOString()
  },
  {
    id: "5",
    role: "DevOps Engineer",
    level: "Senior",
    questions: [
      "How do you monitor and maintain production systems?",
      "Explain Infrastructure as Code.",
      "What tools do you use for CI/CD?",
      "Describe a time you resolved a major incident quickly."
    ],
    techStacks: ["AWS", "Terraform", "Docker", "Kubernetes"],
    userId: "user654",
    type: "mock",
    finalized: true,
    createdAt: new Date().toISOString()
  },
  {
    id: "6",
    role: "Data Scientist",
    level: "Mid-Level",
    questions: [
      "How do you handle missing data?",
      "Explain the difference between supervised and unsupervised learning.",
      "What tools do you use for data visualization?",
      "Describe a project where you deployed a machine learning model."
    ],
    techStacks: ["Python", "Pandas", "scikit-learn", "TensorFlow"],
    userId: "user987",
    type: "mock",
    finalized: false,
    createdAt: new Date().toISOString()
  },
  {
    id: "7",
    role: "Machine Learning Engineer",
    level: "Junior",
    questions: [
      "What is overfitting and how can you prevent it?",
      "Explain cross-validation.",
      "What is gradient descent?",
      "How do you choose the right algorithm for a problem?"
    ],
    techStacks: ["Python", "NumPy", "PyTorch", "scikit-learn"],
    userId: "user246",
    type: "mock",
    finalized: false,
    createdAt: new Date().toISOString()
  },
  {
    id: "8",
    role: "Product Manager",
    level: "Mid-Level",
    questions: [
      "How do you prioritize features?",
      "What tools do you use for roadmapping?",
      "How do you handle conflict between stakeholders?",
      "Describe your experience writing user stories."
    ],
    techStacks: ["Jira", "Figma", "Notion"],
    userId: "user135",
    type: "mock",
    finalized: true,
    createdAt: new Date().toISOString()
  },
  {
    id: "9",
    role: "UI/UX Designer",
    level: "Junior",
    questions: [
      "How do you conduct user research?",
      "What is the difference between UX and UI?",
      "What tools do you use for prototyping?",
      "How do you collaborate with developers?"
    ],
    techStacks: ["Figma", "Sketch", "Adobe XD"],
    userId: "user864",
    type: "mock",
    finalized: false,
    createdAt: new Date().toISOString()
  },
  {
    id: "10",
    role: "QA Engineer",
    level: "Mid-Level",
    questions: [
      "What is the difference between manual and automated testing?",
      "How do you ensure test coverage?",
      "Describe your experience with testing frameworks.",
      "What is regression testing?"
    ],
    techStacks: ["Selenium", "Jest", "Cypress"],
    userId: "user111",
    type: "mock",
    finalized: true,
    createdAt: new Date().toISOString()
  }
];


export const interviewCovers = [
  "/adobe.png",
  "/amazon.png",
  "/facebook.png",
  "/hostinger.png",
  "/pinterest.png",
  "/quora.png",
  "/reddit.png",
  "/skype.png",
  "/spotify.png",
  "/telegram.png",
  "/tiktok.png",
  "/yahoo.png",
];

export const mappings = {
  "react.js": "react",
  reactjs: "react",
  react: "react",
  "next.js": "nextjs",
  nextjs: "nextjs",
  next: "nextjs",
  "vue.js": "vuejs",
  vuejs: "vuejs",
  vue: "vuejs",
  "express.js": "express",
  expressjs: "express",
  express: "express",
  "node.js": "nodejs",
  nodejs: "nodejs",
  node: "nodejs",
  mongodb: "mongodb",
  mongo: "mongodb",
  mongoose: "mongoose",
  mysql: "mysql",
  postgresql: "postgresql",
  sqlite: "sqlite",
  firebase: "firebase",
  docker: "docker",
  kubernetes: "kubernetes",
  aws: "aws",
  azure: "azure",
  gcp: "gcp",
  digitalocean: "digitalocean",
  heroku: "heroku",
  photoshop: "photoshop",
  "adobe photoshop": "photoshop",
  html5: "html5",
  html: "html5",
  css3: "css3",
  css: "css3",
  sass: "sass",
  scss: "sass",
  less: "less",
  tailwindcss: "tailwindcss",
  tailwind: "tailwindcss",
  bootstrap: "bootstrap",
  jquery: "jquery",
  typescript: "typescript",
  ts: "typescript",
  javascript: "javascript",
  js: "javascript",
  "angular.js": "angular",
  angularjs: "angular",
  angular: "angular",
  "ember.js": "ember",
  emberjs: "ember",
  ember: "ember",
  "backbone.js": "backbone",
  backbonejs: "backbone",
  backbone: "backbone",
  nestjs: "nestjs",
  graphql: "graphql",
  "graph ql": "graphql",
  apollo: "apollo",
  webpack: "webpack",
  babel: "babel",
  "rollup.js": "rollup",
  rollupjs: "rollup",
  rollup: "rollup",
  "parcel.js": "parcel",
  parceljs: "parcel",
  npm: "npm",
  yarn: "yarn",
  git: "git",
  github: "github",
  gitlab: "gitlab",
  bitbucket: "bitbucket",
  figma: "figma",
  prisma: "prisma",
  redux: "redux",
  flux: "flux",
  redis: "redis",
  selenium: "selenium",
  cypress: "cypress",
  jest: "jest",
  mocha: "mocha",
  chai: "chai",
  karma: "karma",
  vuex: "vuex",
  "nuxt.js": "nuxt",
  nuxtjs: "nuxt",
  nuxt: "nuxt",
  strapi: "strapi",
  wordpress: "wordpress",
  contentful: "contentful",
  netlify: "netlify",
  vercel: "vercel",
  "aws amplify": "amplify",
};
